//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShiftCaptain.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ShiftCaptainEntities : DbContext
    {
        public ShiftCaptainEntities()
            : base("name=ShiftCaptainEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Address> Addresses { get; set; }
        public DbSet<Building> Buildings { get; set; }
        public DbSet<EmailTemplate> EmailTemplates { get; set; }
        public DbSet<Preference> Preferences { get; set; }
        public DbSet<Room> Rooms { get; set; }
        public DbSet<RoomHour> RoomHours { get; set; }
        public DbSet<RoomInstance> RoomInstances { get; set; }
        public DbSet<Shift> Shifts { get; set; }
        public DbSet<ShiftPreference> ShiftPreferences { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<UserInstance> UserInstances { get; set; }
        public DbSet<Version> Versions { get; set; }
        public DbSet<BuildingView> BuildingViews { get; set; }
        public DbSet<RoomView> RoomViews { get; set; }
        public DbSet<UserView> UserViews { get; set; }
    
        [EdmFunction("ShiftCaptainEntities", "CantWorkViolation")]
        public virtual IQueryable<CantWorkViolation_Result> CantWorkViolation(Nullable<int> versionId)
        {
            var versionIdParameter = versionId.HasValue ?
                new ObjectParameter("VersionId", versionId) :
                new ObjectParameter("VersionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CantWorkViolation_Result>("[ShiftCaptainEntities].[CantWorkViolation](@VersionId)", versionIdParameter);
        }
    
        [EdmFunction("ShiftCaptainEntities", "ConflictingShifts")]
        public virtual IQueryable<ConflictingShifts_Result> ConflictingShifts(Nullable<int> versionId)
        {
            var versionIdParameter = versionId.HasValue ?
                new ObjectParameter("VersionId", versionId) :
                new ObjectParameter("VersionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ConflictingShifts_Result>("[ShiftCaptainEntities].[ConflictingShifts](@VersionId)", versionIdParameter);
        }
    
        [EdmFunction("ShiftCaptainEntities", "NoShiftCoverage")]
        public virtual IQueryable<NoShiftCoverage_Result> NoShiftCoverage(Nullable<int> versionId)
        {
            var versionIdParameter = versionId.HasValue ?
                new ObjectParameter("versionId", versionId) :
                new ObjectParameter("versionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<NoShiftCoverage_Result>("[ShiftCaptainEntities].[NoShiftCoverage](@versionId)", versionIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_clone_schedule(Nullable<int> versionId, string versionName, string users, string rooms)
        {
            var versionIdParameter = versionId.HasValue ?
                new ObjectParameter("VersionId", versionId) :
                new ObjectParameter("VersionId", typeof(int));
    
            var versionNameParameter = versionName != null ?
                new ObjectParameter("VersionName", versionName) :
                new ObjectParameter("VersionName", typeof(string));
    
            var usersParameter = users != null ?
                new ObjectParameter("Users", users) :
                new ObjectParameter("Users", typeof(string));
    
            var roomsParameter = rooms != null ?
                new ObjectParameter("Rooms", rooms) :
                new ObjectParameter("Rooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_clone_schedule", versionIdParameter, versionNameParameter, usersParameter, roomsParameter);
        }
    }
}
