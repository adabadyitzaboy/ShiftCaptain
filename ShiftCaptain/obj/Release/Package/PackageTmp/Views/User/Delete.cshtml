@model ShiftCaptain.Models.UserView

@{
    ViewBag.Title = "Delete User";
}

<h2>Delete User</h2>

@if(ViewBag.CanDelete){
    <h3>Are you sure you want to delete this?</h3>
}else{
    <p>@ViewBag.CantDeleteReason</p>
}
<fieldset>
    <legend>UserView</legend>

    <div class="hidden-field">
        @Html.DisplayFor(model => model.UserId)
    </div>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.EmailAddress)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.EmailAddress)
    </div>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.FName)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.FName)
    </div>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.MName)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.MName)
    </div>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.LName)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.LName)
    </div>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.NickName)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.NickName)
    </div>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.EmployeeId)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.EmployeeId)
    </div>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.PhoneNumber)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.PhoneNumber)
    </div>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.IsShiftManager)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.IsShiftManager)
    </div>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.IsManager)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.IsManager)
    </div>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.Locked)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Locked)
    </div>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.LastLogin)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.LastLogin)
    </div>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.IsActive)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.IsActive)
    </div>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.IsMale)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.IsMale)
    </div>

    <div class="small-12 large-2 columns address-holder">
        <h3>Address</h3>
        @if (String.IsNullOrEmpty(Model.Line1)){
            <p>N/A</p>
        }else{
            @Html.Partial("Templates/_UserAddress", Model)
        }
    </div>
</fieldset>
@if(ViewBag.CanDelete){
    using (Html.BeginForm()) {
        @Html.AntiForgeryToken()
        <p>
            <input type="submit" value="Delete" /> |
            @Html.ActionLink("Back to List", "Index", new { VersionName = ViewBag.CurrentVersionName })
        </p>
    }
}else{
    <p>@ViewBag.CantDeleteReason</p>
}