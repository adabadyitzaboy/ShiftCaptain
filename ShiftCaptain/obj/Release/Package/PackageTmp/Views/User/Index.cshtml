@model IEnumerable<ShiftCaptain.Models.UserView>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="sortable">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.EmailAddress)
        </th>
        <th>
            Name
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NickName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EmployeeId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsShiftManager)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsManager)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Locked)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsActive)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MinHours)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CurrentHours)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MaxHours)
        </th>
        <th>
            Address
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.EmailAddress)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FName)&nbsp;        
            @Html.DisplayFor(modelItem => item.MName)&nbsp;
            @Html.DisplayFor(modelItem => item.LName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.NickName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EmployeeId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PhoneNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsShiftManager)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsManager)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Locked)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsActive)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MinHours)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CurrentHours)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MaxHours)
        </td>
        <td class="has-expansion">
            @if (String.IsNullOrEmpty(item.Line1))
            {
                <p>N/A</p>
            }else{
                @Html.DisplayFor(modelItem => item.Line1)
                <div class="expansion">
                    @Html.Partial("Templates/_UserAddress", item)
                </div>
            }
        </td>
        <td>
            @if (ShiftCaptain.Infrastructure.SessionManager.IsManager && item.UserId != ShiftCaptain.Infrastructure.SessionManager.UserId){
                @Html.ActionLink("Edit", "Edit", new { id=item.UserId }) @Html.Raw(" | ") 
            } 
                @Html.ActionLink("Details", "Details", new { id=item.UserId }) 
            @if (ShiftCaptain.Infrastructure.SessionManager.IsManager && item.UserId != ShiftCaptain.Infrastructure.SessionManager.UserId)
            {
                 @Html.Raw(" | ") @Html.ActionLink("Delete", "Delete", new { id=item.UserId }) 
            }
            @if (ShiftCaptain.Infrastructure.SessionManager.IsManager && item.UserId != ShiftCaptain.Infrastructure.SessionManager.UserId){
                 @Html.Raw(" | ")  @Html.ActionLink("Reset Pass", "ResetPassword", "EmailTemplate",new { id=item.UserId }, null)
            }
        </td>
    </tr>
}

</table>
@section scripts {
    @Scripts.Render("~/Scripts/sort.js")
}